<?php  	/* 	Plugin Name: ProfTeamExtensions	Plugin URI: http://www.profteamsolutions.com	Version: 20.1	Author: ProfTeam	Description: A plugin that Provide Post Types.	*/  /*------------------------------------------------------Selfie, Add Portfolio Option to the Theme - Started-------------------------------------------------------*/add_action( 'plugins_loaded', 'selfie_ext_setup' );function selfie_ext_setup(){	add_action('init', 'selfie_register_cpt_team' );	add_action( 'init', 'selfie_register_cpt_portfolio');	add_action( 'init', 'selfie_register_cpt_testimonial');	add_action( 'init', 'selfie_register_cpt_process');		add_action( 'init', 'selfie_register_cpt_present');		add_action( 'init', 'selfie_register_cpt_education');	add_action( 'init', 'create_team_taxonomies');		add_action( 'init', 'create_portfolio_taxonomies');	add_action( 'init', 'create_process_taxonomies');		add_action('init', 'selfie_register_cpt_skills' );	}function create_team_taxonomies() {		$labels = array(		'name'              => esc_html__( 'Team Categories', 'selfie' ),		'singular_name'     => esc_html__( 'Team Categories', 'selfie' ),		'search_items'      => esc_html__( 'Search Team Categories' , 'selfie'),		'all_items'         => esc_html__( 'All Team Categories' , 'selfie' ),		'parent_item'       => esc_html__( 'Parent Team Categories'  , 'selfie'),		'parent_item_colon' => esc_html__( 'Parent Team Categories:' , 'selfie' ),		'edit_item'         => esc_html__( 'Edit Team Category'  , 'selfie'),		'update_item'       => esc_html__( 'Update Team Category'  , 'selfie'),		'add_new_item'      => esc_html__( 'Add New Team Category'  , 'selfie'),		'new_item_name'     => esc_html__( 'New Team Category Name' , 'selfie' ),		'menu_name'         => esc_html__( 'Team Category' , 'selfie' ),	);	$args = array(		'hierarchical'      => true,		'labels'            => $labels,		'show_ui'           => true,		'show_admin_column' => true,		'query_var'         => true,		'rewrite'           => array( 'slug' => 'teamcategories' ),	);	register_taxonomy( 'teamcategories', array( 'team' ), $args );}function create_portfolio_taxonomies() {		$labels = array(		'name'              => esc_html__( 'Portfolio Categories', 'selfie' ),		'singular_name'     => esc_html__( 'Portfolio Categories', 'selfie' ),		'search_items'      => esc_html__( 'Search Portfolio Categories' , 'selfie'),		'all_items'         => esc_html__( 'All Portfolio Categories' , 'selfie' ),		'parent_item'       => esc_html__( 'Parent Portfolio Categories'  , 'selfie'),		'parent_item_colon' => esc_html__( 'Parent Portfolio Categories:' , 'selfie' ),		'edit_item'         => esc_html__( 'Edit Portfolio Category'  , 'selfie'),		'update_item'       => esc_html__( 'Update Portfolio Category'  , 'selfie'),		'add_new_item'      => esc_html__( 'Add New Portfolio Category'  , 'selfie'),		'new_item_name'     => esc_html__( 'New Portfolio Category Name' , 'selfie' ),		'menu_name'         => esc_html__( 'Portfolio Category' , 'selfie' ),	);	$args = array(		'hierarchical'      => true,		'labels'            => $labels,		'show_ui'           => true,		'show_admin_column' => true,		'query_var'         => true,		'rewrite'           => array( 'slug' => 'portfoliocategories' ),	);	register_taxonomy( 'portfoliocategories', array( 'portfolio' ), $args );}function create_process_taxonomies() {		$labels = array(		'name'              => esc_html__( 'Process Categories', 'selfie' ),		'singular_name'     => esc_html__( 'Process Categories', 'selfie' ),		'search_items'      => esc_html__( 'Search Process Categories' , 'selfie'),		'all_items'         => esc_html__( 'All Process Categories' , 'selfie' ),		'parent_item'       => esc_html__( 'Parent Process Categories'  , 'selfie'),		'parent_item_colon' => esc_html__( 'Parent Process Categories:' , 'selfie' ),		'edit_item'         => esc_html__( 'Edit Process Category'  , 'selfie'),		'update_item'       => esc_html__( 'Update Process Category'  , 'selfie'),		'add_new_item'      => esc_html__( 'Add New Process Category'  , 'selfie'),		'new_item_name'     => esc_html__( 'New Process Category Name' , 'selfie' ),		'menu_name'         => esc_html__( 'Process Category' , 'selfie' ),	);	$args = array(		'hierarchical'      => true,		'labels'            => $labels,		'show_ui'           => true,		'show_admin_column' => true,		'query_var'         => true,		'rewrite'           => array( 'slug' => 'processcategories' ),	);	register_taxonomy( 'processcategories', array( 'process' ), $args );}	function selfie_register_cpt_portfolio() {$labels = array(	'name' => esc_html__( 'Portfolio', 'selfie' ),	'singular_name' => esc_html__( 'portfolio', 'selfie' ),	'add_new' => esc_html__( 'Add New', 'selfie' ),	'add_new_item' => esc_html__( 'Add New portfolio', 'selfie' ),	'edit_item' => esc_html__( 'Edit portfolio', 'selfie' ),	'new_item' => esc_html__( 'New portfolio', 'selfie' ),	'view_item' => esc_html__( 'View portfolio', 'selfie' ),	'search_items' => esc_html__( 'Search portfolios', 'selfie' ),	'not_found' => esc_html__( 'No portfolios found', 'selfie' ),	'not_found_in_trash' => esc_html__( 'No portfolios found in Trash', 'selfie' ),	'parent_item_colon' => esc_html__( 'Parent portfolio:', 'selfie' ),	'menu_name' => esc_html__( 'Portfolio', 'selfie' ),);$args = array(	'labels' => $labels,	'hierarchical' => false,	'supports' => array( 'title', 'editor', 'author', 'thumbnail', 'revisions' , 'comments'),	'taxonomies' => array('portfoliocategories', 'post_tag'),		 	'public' => true,	'show_ui' => true,	'show_in_menu' => true,	  	'show_in_nav_menus' => true,	'publicly_queryable' => true,	'exclude_from_search' => false,	'has_archive' => true,	'query_var' => true,	'can_export' => true,	'rewrite' => true,	'capability_type' => 'post');register_post_type( 'portfolio', $args );}/*------------------------------------------------------Selfie, Add Portfolio Option to the Theme - End-------------------------------------------------------*//*------------------------------------------------------Selfie, Add Team Members Option to the Theme - Started-------------------------------------------------------*/function selfie_register_cpt_team() {$labels = array(	'name' => __( 'Team', 'selfie' ),	'singular_name' => __( 'Team', 'selfie' ),	'add_new' => __( 'Add New', 'selfie' ),	'add_new_item' => __( 'Add New Team Member', 'selfie' ),	'edit_item' => __( 'Edit Team Member', 'selfie' ),	'new_item' => __( 'New Team Member', 'selfie' ),	'view_item' => __( 'View Team Member', 'selfie' ),	'search_items' => __( 'Search Team Member', 'selfie' ),	'not_found' => __( 'No Team Member found', 'selfie' ),	'not_found_in_trash' => __( 'No Team Member found in Trash', 'selfie' ),	'parent_item_colon' => __( 'Parent Team Member:', 'selfie' ),	'menu_name' => __( 'Team', 'selfie' ),);$args = array(	'labels' => $labels,	'hierarchical' => false,	'supports' => array( 'title', 'editor', 'author', 'thumbnail', 'revisions' ),	'taxonomies' => array('teamcategories', 'post_tag'),				'public' => true,	'show_ui' => true,	'show_in_menu' => true,	  	'show_in_nav_menus' => true,	'publicly_queryable' => true,	'exclude_from_search' => false,	'has_archive' => true,	'query_var' => true,	'can_export' => true,	'rewrite' => true,	'capability_type' => 'post');register_post_type( 'team', $args );}/*------------------------------------------------------Selfie, Add Skills Option to the Theme - Started-------------------------------------------------------*/function selfie_register_cpt_skills() {$labels = array(	'name' => esc_html__( 'Skills', 'selfie' ),	'singular_name' => esc_html__( 'skills', 'selfie' ),	'add_new' => esc_html__( 'Add New', 'selfie' ),	'add_new_item' => esc_html__( 'Add New Skill', 'selfie' ),	'edit_item' => esc_html__( 'Edit Skill', 'selfie' ),	'new_item' => esc_html__( 'New Skill', 'selfie' ),	'view_item' => esc_html__( 'View Skills', 'selfie' ),	'search_items' => esc_html__( 'Search Skills', 'selfie' ),	'not_found' => esc_html__( 'No Skills found', 'selfie' ),	'not_found_in_trash' => esc_html__( 'No Skills found in Trash', 'selfie' ),	'parent_item_colon' => esc_html__( 'Parent Skill:', 'selfie' ),	'menu_name' => esc_html__( 'Skills', 'selfie' ),);$args = array(	'labels' => $labels,	'hierarchical' => false,	'supports' => array( 'title', 'author' ),		'public' => true,	'show_ui' => true,	'show_in_menu' => true,	  	'show_in_nav_menus' => true,	'publicly_queryable' => true,	'exclude_from_search' => false,	'has_archive' => true,	'query_var' => true,	'can_export' => true,	'rewrite' => true,	'capability_type' => 'post');register_post_type( 'skills', $args );}/*------------------------------------------------------Selfie, Add Present Option to the Theme - Started-------------------------------------------------------*/function selfie_register_cpt_present() {$labels = array(	'name' => esc_html__( 'Present', 'selfie' ),	'singular_name' => esc_html__( 'present', 'selfie' ),	'add_new' => esc_html__( 'Add New', 'selfie' ),	'add_new_item' => esc_html__( 'Add New present', 'selfie' ),	'edit_item' => esc_html__( 'Edit present', 'selfie' ),	'new_item' => esc_html__( 'New present', 'selfie' ),	'view_item' => esc_html__( 'View present', 'selfie' ),	'search_items' => esc_html__( 'Search Present', 'selfie' ),	'not_found' => esc_html__( 'No present found', 'selfie' ),	'not_found_in_trash' => esc_html__( 'No present found in Trash', 'selfie' ),	'parent_item_colon' => esc_html__( 'Parent present:', 'selfie' ),	'menu_name' => esc_html__( 'Present', 'selfie' ),);$args = array(	'labels' => $labels,	'hierarchical' => false,	'supports' => array( 'title', 'editor', 'author','thumbnail', 'revisions' ),		'public' => true,	'show_ui' => true,	'show_in_menu' => true,	  	'show_in_nav_menus' => true,	'publicly_queryable' => true,	'exclude_from_search' => false,	'has_archive' => true,	'query_var' => true,	'can_export' => true,	'rewrite' => true,	'capability_type' => 'post');register_post_type( 'present', $args );}/*------------------------------------------------------Selfie, Add Present Option to the Theme - End-------------------------------------------------------*//*------------------------------------------------------Selfie, Add Education Option to the Theme - Started-------------------------------------------------------*/function selfie_register_cpt_education() {$labels = array(	'name' => esc_html__( 'Education', 'selfie' ),	'singular_name' => esc_html__( 'education', 'selfie' ),	'add_new' => esc_html__( 'Add New', 'selfie' ),	'add_new_item' => esc_html__( 'Add New education', 'selfie' ),	'edit_item' => esc_html__( 'Edit education', 'selfie' ),	'new_item' => esc_html__( 'New education', 'selfie' ),	'view_item' => esc_html__( 'View education', 'selfie' ),	'search_items' => esc_html__( 'Search Education', 'selfie' ),	'not_found' => esc_html__( 'No education found', 'selfie' ),	'not_found_in_trash' => esc_html__( 'No education found in Trash', 'selfie' ),	'parent_item_colon' => esc_html__( 'Parent education:', 'selfie' ),	'menu_name' => esc_html__( 'Education', 'selfie' ),);$args = array(	'labels' => $labels,	'hierarchical' => false,	'supports' => array( 'title', 'editor', 'author', 'thumbnail', 'revisions' ),		'public' => true,	'show_ui' => true,	'show_in_menu' => true,	  	'show_in_nav_menus' => true,	'publicly_queryable' => true,	'exclude_from_search' => false,	'has_archive' => true,	'query_var' => true,	'can_export' => true,	'rewrite' => true,	'capability_type' => 'post');register_post_type( 'education', $args );}/*------------------------------------------------------Selfie, Add education Option to the Theme - End-------------------------------------------------------*//*------------------------------------------------------Selfie, Add Testimonial Option to the Theme - Started-------------------------------------------------------*/function selfie_register_cpt_testimonial() {$labels = array(	'name' => esc_html__( 'Testimonials', 'selfie' ),	'singular_name' => esc_html__( 'testimonial', 'selfie' ),	'add_new' => esc_html__( 'Add New', 'selfie' ),	'add_new_item' => esc_html__( 'Add New testimonial', 'selfie' ),	'edit_item' => esc_html__( 'Edit testimonial', 'selfie' ),	'new_item' => esc_html__( 'New testimonial', 'selfie' ),	'view_item' => esc_html__( 'View testimonial', 'selfie' ),	'search_items' => esc_html__( 'Search Testimonials', 'selfie' ),	'not_found' => esc_html__( 'No testimonials found', 'selfie' ),	'not_found_in_trash' => esc_html__( 'No testimonials found in Trash', 'selfie' ),	'parent_item_colon' => esc_html__( 'Parent testimonial:', 'selfie' ),	'menu_name' => esc_html__( 'Testimonials', 'selfie' ),);$args = array(	'labels' => $labels,	'hierarchical' => false,	'supports' => array( 'title', 'editor', 'author', 'thumbnail', 'revisions' ),		'public' => true,	'show_ui' => true,	'show_in_menu' => true,	  	'show_in_nav_menus' => true,	'publicly_queryable' => true,	'exclude_from_search' => false,	'has_archive' => true,	'query_var' => true,	'can_export' => true,	'rewrite' => true,	'capability_type' => 'post');register_post_type( 'testimonial', $args );}/*------------------------------------------------------Selfie, Add Testimonial Option to the Theme - End-------------------------------------------------------*//*------------------------------------------------------Selfie, Add Process Option to the Theme - Started-------------------------------------------------------*/function selfie_register_cpt_process() {$labels = array(	'name' => esc_html__( 'Process', 'selfie' ),	'singular_name' => esc_html__( 'process', 'selfie' ),	'add_new' => esc_html__( 'Add New', 'selfie' ),	'add_new_item' => esc_html__( 'Add New process', 'selfie' ),	'edit_item' => esc_html__( 'Edit process', 'selfie' ),	'new_item' => esc_html__( 'New process', 'selfie' ),	'view_item' => esc_html__( 'View process', 'selfie' ),	'search_items' => esc_html__( 'Search process', 'selfie' ),	'not_found' => esc_html__( 'No process found', 'selfie' ),	'not_found_in_trash' => esc_html__( 'No process found in Trash', 'selfie' ),	'parent_item_colon' => esc_html__( 'Parent process:', 'selfie' ),	'menu_name' => esc_html__( 'Process', 'selfie' ),);	$args = array(	'labels' => $labels,	'hierarchical' => false,	'supports' => array( 'title', 'editor', 'author','thumbnail', 'revisions' ),	'taxonomies' => array('processcategories', 'post_tag'),				'public' => true,	'show_ui' => true,	'show_in_menu' => true,	  	'show_in_nav_menus' => true,	'publicly_queryable' => true,	'exclude_from_search' => false,	'has_archive' => true,	'query_var' => true,	'can_export' => true,	'rewrite' => true,	'capability_type' => 'post');register_post_type( 'process', $args );}/*------------------------------------------------------Selfie, Add Process Option to the Theme - End-------------------------------------------------------*//*------------------------------------------------------Selfie, Add Team Members Option to the Theme - End-------------------------------------------------------*/if ( ! function_exists( 'optionsframework_mlu_init' ) ) :function optionsframework_mlu_init () {	register_post_type( 'optionsframework', array(		'labels' => array(			'name' => esc_html__( 'Theme Options Media', 'selfie' ),		),		'public' => true,		'show_ui' => false,		'capability_type' => 'post',		'hierarchical' => false,		'rewrite' => false,		'supports' => array( 'title', 'editor' ), 		'query_var' => false,		'can_export' => true,		'show_in_nav_menus' => false,		'public' => false	) );}endif;add_action( 'init', 'selfie_add_page_cats' );	function selfie_add_page_cats(){    register_taxonomy_for_object_type( 'category', 'post' );}if(function_exists('selfie_section_title')){	add_shortcode('selfie_section_title', 'selfie_section_title');}if(function_exists('selfie_services_icons')){add_shortcode('selfie_services_icons', 'selfie_services_icons');}if(function_exists('selfie_animated_numbers')){add_shortcode('selfie_animated_numbers', 'selfie_animated_numbers');}if(function_exists('selfie_chart')){add_shortcode('selfie_chart', 'selfie_chart');}if(function_exists('selfie_clients_images')){add_shortcode('selfie_clients_images', 'selfie_clients_images');}if(function_exists('selfie_button')){add_shortcode('selfie_button', 'selfie_button');}if(function_exists('selfie_homepage_container')){	add_shortcode('homepage_container', 'selfie_homepage_container');}if(function_exists('selfie_homepage_container_wide')){add_shortcode('homepage_container_wide', 'selfie_homepage_container_wide');}if(function_exists('selfie_homepage_container_end')){add_shortcode('homepage_container_end', 'selfie_homepage_container_end');}if(function_exists('selfie_process')){add_shortcode('selfie_process', 'selfie_process');}if(function_exists('selfie_process_timeline')){add_shortcode('selfie_process_timeline', 'selfie_process_timeline');}if(function_exists('selfie_portfolio')){add_shortcode('selfie_portfolio', 'selfie_portfolio');}if(function_exists('selfie_testimonial')){add_shortcode('selfie_testimonial', 'selfie_testimonial');}if(function_exists('selfie_blog')){add_shortcode('selfie_blog', 'selfie_blog');}if(function_exists('selfie_contact_details')){add_shortcode('selfie_contact_details', 'selfie_contact_details');}if(function_exists('selfie_social_icon')){add_shortcode('selfie_social_icon', 'selfie_social_icon');}if(function_exists('selfie_social_icon_circle')){add_shortcode('selfie_social_icon_circle', 'selfie_social_icon_circle');}if(function_exists('selfie_alert_box')){add_shortcode('selfie_alert_box', 'selfie_alert_box');}if(function_exists('selfie_list_item')){add_shortcode('selfie_list_item', 'selfie_list_item');}if(function_exists('selfie_dropcaps')){add_shortcode('selfie_dropcaps', 'selfie_dropcaps');}if(function_exists('selfie_heading_one')){add_shortcode('selfie_heading_one', 'selfie_heading_one');}if(function_exists('selfie_heading_two')){add_shortcode('selfie_heading_two', 'selfie_heading_two');}if(function_exists('selfie_heading_three')){add_shortcode('selfie_heading_three', 'selfie_heading_three');}if(function_exists('selfie_heading_four')){add_shortcode('selfie_heading_four', 'selfie_heading_four');}if(function_exists('selfie_heading_five')){add_shortcode('selfie_heading_five', 'selfie_heading_five');}if(function_exists('selfie_heading_six')){add_shortcode('selfie_heading_six', 'selfie_heading_six');}if(function_exists('selfie_page_section')){	add_shortcode('selfie_page_section', 'selfie_page_section');}if(function_exists('selfie_resume_timeline')){	add_shortcode('selfie_resume_timeline', 'selfie_resume_timeline');}if(function_exists('selfie_about_me_image')){	add_shortcode('selfie_about_me_image', 'selfie_about_me_image');}if(function_exists('selfie_personal_details')){	add_shortcode('selfie_personal_details', 'selfie_personal_details');}if(function_exists('selfie_skills_bar')){	add_shortcode('selfie_skills_bar', 'selfie_skills_bar');}if(function_exists('selfie_download_button')){	add_shortcode('selfie_download_button', 'selfie_download_button');}if(function_exists('selfie_services_with_icon')){	add_shortcode('selfie_services_with_icon', 'selfie_services_with_icon');}if(function_exists('selfie_services_with_icon_rotate')){	add_shortcode('selfie_services_with_icon_rotate', 'selfie_services_with_icon_rotate');}if(function_exists('selfie_services_with_image')){	add_shortcode('selfie_services_with_image', 'selfie_services_with_image');}if(function_exists('selfie_pricing_table')){	add_shortcode('selfie_pricing_table', 'selfie_pricing_table');}if(function_exists('selfie_details')){	add_shortcode('selfie_details', 'selfie_details');}if(function_exists('selfie_skills')){	add_shortcode('selfie_skills', 'selfie_skills');}if(function_exists('selfie_profile_details')){	add_shortcode('selfie_profile_details', 'selfie_profile_details');}if(function_exists('selfie_circle_service_widget')){	add_shortcode('selfie_circle_service_widget', 'selfie_circle_service_widget');}if(function_exists('selfie_slider_section')){	add_shortcode('selfie_slider_section', 'selfie_slider_section');}if(function_exists('selfie_team_members')){add_shortcode('selfie_team_members', 'selfie_team_members');}/*------------------------------------------------------Selfie Team Members - Four per Row - Shortcode-------------------------------------------------------*/function selfie_team_members( $atts, $content = null ) {	extract(shortcode_atts(array('noofposts' => '4' , 'read' => '' , 'postcategory' => ''), $atts));		global $prof_default;				if($noofposts == '3' || $noofposts == '2' || $noofposts == '1'){$handleClass = 'handle-team-members';} else {$handleClass = '';}		$return_string = '<div class="' . $handleClass . '">';	$percentage = '';	$linkValue = '';	$UrlValue = '';		if(strtoupper($postcategory) == ''){		$loop = new WP_Query(array('post_type' => 'team', 'posts_per_page' => $noofposts));	} else {		$loop = new WP_Query(array('post_type' => 'team', 'posts_per_page' => $noofposts,		'tax_query' => array(array(			'taxonomy' => 'teamcategories',			'field'    => 'slug',			'terms'    => $postcategory))								));	}						if ( $loop ) :   	while ( $loop->have_posts() ) : $loop->the_post();		if(get_post_meta(get_the_ID(), 'Team Social One Link', true) != ''){		$gplus = get_post_meta(get_the_ID(), 'Team Social One', true);		if(get_post_meta(get_the_ID(), 'Team Social One', true) == 'gplus'){$gplus = 'google-plus';}		$socialStringOne = '<a href="' . esc_url(get_post_meta(get_the_ID(), 'Team Social One Link', true)) . '" class="' . get_post_meta(get_the_ID(), 'Team Social One', true) . '"><i class="fa fa-' . $gplus . '"></i></a>';	} else {$socialStringOne ='';}		if(get_post_meta(get_the_ID(), 'Team Social Two Link', true) != ''){		$gplus = get_post_meta(get_the_ID(), 'Team Social Two', true);		if(get_post_meta(get_the_ID(), 'Team Social Two', true) == 'gplus'){$gplus = 'google-plus';}		$socialStringTwo = '<a href="' . esc_url(get_post_meta(get_the_ID(), 'Team Social Two Link', true)) . '" class="' . get_post_meta(get_the_ID(), 'Team Social Two', true) . '"><i class="fa fa-' . $gplus . '"></i></a>';	} else {$socialStringTwo ='';}		if(get_post_meta(get_the_ID(), 'Team Social Three Link', true) != ''){		$gplus = get_post_meta(get_the_ID(), 'Team Social Three', true);		if(get_post_meta(get_the_ID(), 'Team Social Three', true) == 'gplus'){$gplus = 'google-plus';}		$socialStringThree = '<a href="' . esc_url(get_post_meta(get_the_ID(), 'Team Social Three Link', true)) . '" class="' . get_post_meta(get_the_ID(), 'Team Social Three', true) . '"><i class="fa fa-' . $gplus . '"></i></a>';	} else {$socialStringThree ='';}			if(get_post_meta(get_the_ID(), 'Team Skill Title One', true) != ''){		$percentage = get_post_meta(get_the_ID(), 'Team Skill Percentage One', true);		$skilltitleone_string = '<li>									<div class="skillBg">										<span data-width="' . esc_attr($percentage) . '" style="width: ' . esc_attr($percentage) . '%;"><strong>' . get_post_meta(get_the_ID(), 'Team Skill Title One', true) . ' ' . esc_attr($percentage) . '%</strong></span>									</div>								</li>';									} else {$skilltitleone_string ='';}				if(get_post_meta(get_the_ID(), 'Team Skill Title Two', true) != ''){		$percentage = get_post_meta(get_the_ID(), 'Team Skill Percentage Two', true);		$skilltitletwo_string = '<li>									<div class="skillBg">										<span data-width="' . esc_attr($percentage) . '" style="width: ' . esc_attr($percentage) . '%;"><strong>' . get_post_meta(get_the_ID(), 'Team Skill Title Two', true) . ' ' . esc_attr($percentage) . '%</strong></span>									</div>								</li>';	} else {$skilltitletwo_string ='';}			if(get_post_meta(get_the_ID(), 'Team Skill Title Three', true) != ''){		$percentage = get_post_meta(get_the_ID(), 'Team Skill Percentage Three', true);		$skilltitlethree_string = '<li>									<div class="skillBg">										<span data-width="' . esc_attr($percentage) . '" style="width: ' . esc_attr($percentage) . '%;"><strong>' . get_post_meta(get_the_ID(), 'Team Skill Title Three', true) . ' ' . esc_attr($percentage) . '%</strong></span>									</div>								</li>';	} else {$skilltitlethree_string ='';}		$get_team_position =  get_post_meta(get_the_ID(), 'Team Member Position', true);		if($read == 'yes'){		$UrlValue = __("Read More" , "selfie");		$linkValue = '<a href="' . esc_url(get_permalink()) . '">' . $UrlValue . '</a>';	} else {		$linkValue = '';		}			$return_string .= '<div class="col-md-3 col-sm-6 col-xs-12">							<div class="member_item">							<div class="member_img">								'. get_the_post_thumbnail( get_the_ID() , 'identity-team'  ) . '							</div>							<div class="member_descr center">								<div class="member_name">									'. get_the_title() .'								</div>								<div class="member_post">									 ' . esc_attr($get_team_position) . '								</div>								<div class="member_social">								'  . $socialStringOne . $socialStringTwo . $socialStringThree .  '								</div>								<div class="member_about">									 ' . strip_shortcodes(wp_trim_words( get_the_content(), 20 )) . ' ' . $linkValue . '								</div>								<div class="skill-member">									<ul class="skillBar">										' . $skilltitleone_string . $skilltitletwo_string . $skilltitlethree_string . '									</ul>								</div>							</div>							</div>							</div>';				endwhile;	endif;		wp_reset_query();		$return_string .= '</div>';		return $return_string;	}/*------------------------------------------------------Selfie Circle Service Widget-------------------------------------------------------*/function selfie_circle_service_widget($atts, $content = null) {	extract(shortcode_atts(array('icon' => '', 'title' => '', 'subtitle' => '','iconcolor' => '','iconbackcolor' => '' , 'textcolor' => ''), $atts));		$return_string = '';	$return_string .= '<div class="selfie-circle-widget">                            <span style="background:' . $iconbackcolor . ';"><i style="color:' . $iconcolor . ';" class="fa fa-'. $icon .'"></i></span>                            <h3 style="color:' . $textcolor . ';">' . esc_attr($title) . '</h3>                            <p style="color:' . $textcolor . ';">' . esc_attr($subtitle) . '</p>                        </div>';	return $return_string;}/*------------------------------------------------------Selfie Slider Section - Shortcode-------------------------------------------------------*/function selfie_slider_section($atts, $content = null){	extract(shortcode_atts(array('background' => ''), $atts));	$getText = '';	$getimageurlarray = wp_get_attachment_image_src( $background , 'full');	if( $getimageurlarray ) {$getimageurl = $getimageurlarray[0];} else {$getimageurl = '';}		$getText .='<div class="flexslider identity-slider-styletwo selfie-work-slider">							<ul class="slides">';		$splitImagesArray = explode(",", $background);	$splitImagesArraySize = count($splitImagesArray);		for ($x=0; $x < $splitImagesArraySize; $x++)	{		$getimageurlarray = wp_get_attachment_image_src( $splitImagesArray[$x] , 'full');				$alt = get_post_meta($splitImagesArray[$x], '_wp_attachment_image_alt', true);				$getText .= '<li>							<img class="img-center img-responsive" src="' . $getimageurlarray[0] . '" alt="' . $alt . '">					</li>';	} 		$getText .= '</ul>		</div>';		return $getText;}/*------------------------------------------------------Selfie Profile Details-------------------------------------------------------*/function selfie_profile_details($atts, $content = null) {	extract(shortcode_atts(array('personalimg' => '', 'personalname' => '', 'designation' => '','description' => '','birthdate' => '' , 'phone' => '' , 'email' => '' , 'website' => '' , 'birthdatetitle' => '' ,'phonetitle' => '' ,'emailtitle' => '' ,'websitetitle' => ''), $atts));	$return_string = '';	if($birthdate == ''){$birthdate = '';}else{$birthdate = '<h5><span><i class="fa fa-calendar"></i>' . esc_attr($birthdatetitle) . ': </span>' . esc_attr($birthdate) . '</h5>';}	if($phone == ''){$phone = '';}else{$phone = '<h5><span><i class="fa fa-phone"></i>' . esc_attr($phonetitle) . ': </span>' . esc_attr($phone) . '</h5>';}	if($email == ''){$email = '';}else{$email = '<h5><span><i class="fa fa-envelope"></i>' . esc_attr($emailtitle) . ': </span>' . esc_attr($email) . '</h5>';}	if($website == ''){$website = '';}else{$website = '<h5><span><i class="fa fa-link"></i>' . esc_attr($websitetitle) . ': </span>' . esc_url($website) . '</h5>';}		$getimageurlarray = wp_get_attachment_image_src( $personalimg , 'full');	if( $getimageurlarray ) {$getimageurl = $getimageurlarray[0];} else {$getimageurl = '';}	$return_string .= '		<div class="selfie-profile-details item_bottom">			<img alt="" src="'. esc_url($getimageurl) .'">			<h3>' . esc_attr($personalname) . '</h3>			<h4>' . esc_attr($designation) . '</h4>			<div class="profileInfo">				<p>' . esc_attr($description) . '</p>				' . $birthdate . '				' . $phone . '				' . $website . '				' . $email . '			</div>		</div>';	   return $return_string;	}/*------------------------------------------------------Selfie Skills-------------------------------------------------------*/function selfie_skills($atts, $content = null) {	extract(shortcode_atts(array('number' => '10' , 'animation' => ''), $atts));	$return_string = '<div id="carouselSecond" class="chart-wrap ' . $animation . ' util-carousel features-carousel">';		$loop = new WP_Query(array('post_type' => 'skills', 'posts_per_page' => $number));	if ( $loop ) :   	while ( $loop->have_posts() ) : $loop->the_post();				$return_string .= '				<div class="chart">					<div class="percentage-light" data-percent="' . get_post_meta(get_the_ID(), 'Skill Value (Number Only)', true) . '"><span></span>%</div>					<div class="chart-label">' . get_the_title() . '</div>				</div>';	endwhile;	endif;				$return_string .='</div>';				wp_reset_postdata();		   return $return_string;	}/*------------------------------------------------------Selfie Address - Shortcode	-------------------------------------------------------*/function selfie_details($atts, $content = null) {   extract(shortcode_atts(array('icon' => '' , 'title' => '' , 'text' => '' , 'titlecolor' =>'' , 'textcolor' => '' , 'iconcolor' => ''), $atts));	$allowed_html = array(		'a' => array(			'href' => array(),			'title' => array()		),		'br' => array(),		'strong' => array(),	);   return '	<div class="selfie-resume-widget item_fade_in">		<div style="color:'. $iconcolor .'; border:2px solid '. $iconcolor .'" class="selfie-resume-widget-icon">			<i class="fa fa-'. $icon .'"></i>		</div>		<div class="selfie-resume-widget-text">			<h4 style="color:'. $titlecolor .' !important;">'. $title .'</h4>			<p style="color:'. $textcolor .';">				'. wp_kses($text, $allowed_html) .'			</p>		</div>	</div>';}/*------------------------------------------------------Selfie Download Button - Shortcode	-------------------------------------------------------*/function selfie_download_button($atts, $content = null) {   extract(shortcode_atts(array('fontcolor' => '#000' , 'buttoncolor' => '#FFFFFF' , 'bordercolor' =>'#474d5d' , 'link' => '#' , 'buttontext' => 'Button'), $atts));   if($fontcolor == '#FFFFFF' || $fontcolor == '#ffffff' || $fontcolor == '#fff'  || $fontcolor == '#FFF'){$hoverClass = 'identity-hover-button';}else{$hoverClass = '';}   return '<a target="_blank" href='. esc_url($link) .' class="btn btn-primary btn-lg '. $hoverClass .'" style="color:'. $fontcolor .'; background-color: '. $buttoncolor .'; border: 2px solid '. $bordercolor .';"><i class="fa fa-arrow-down"></i> '. esc_attr($buttontext) .'</a>';}/*------------------------------------------------------Selfie Skills Bar - Shortcode-------------------------------------------------------*/function selfie_skills_bar($atts, $content = null) {	extract(shortcode_atts(array('skillname' => '', 'skillpercentage' => '', 'color' => ''), $atts));	$return_string = '					<div class="skillBar-container"><ul class="skillBar">						<li>						<strong style="color:' . $color . ';">'. esc_attr($skillname). ' ' .  esc_attr($skillpercentage) . '%</strong>						<div class="skillBg">							<span data-width="' . esc_attr($skillpercentage) . '"></span>						</div>						</li>					</ul></div>';	return $return_string;}/*------------------------------------------------------Selfie Contact details - Shortcode-------------------------------------------------------*/function selfie_personal_details( $atts, $content = null ) {	extract(shortcode_atts(array('nationalitytitle' => '' ,'nationality' => '' ,'borntitle' => '' ,'born' => '' ,'gendertitle' => '' ,'gender' => '' ,'nametitle' => '' ,'name' => '' ,'linkedin' => '' ,'facebook' => '' ,'twitter' => '' ,'birthdate' => '' , 'phone' => '' , 'email' => '' , 'website' => '' , 'address' => '' , 'color' => '', 'birthdatetitle' => '' ,'phonetitle' => '' ,'emailtitle' => '' ,'websitetitle' => '','linkedintitle' => '' ,'facebooktitle' => '' ,'twittertitle' => '' ,'addresstitle' => '' ), $atts));		if($nationality == ''){$nationality = '';}else{$nationality = '<li><i class="fa fa-li fa-flag"></i><strong>' . esc_attr($nationalitytitle) . '</strong> : ' . esc_attr($nationality) . '</li>';}			if($born == ''){$born = '';}else{$born = '<li><i class="fa fa-li fa-location-arrow"></i><strong>' . esc_attr($borntitle) . '</strong> : ' . esc_attr($born) . '</li>';}		if($gender == ''){$gender = '';}else{$gender = '<li><i class="fa fa-li fa-child"></i><strong>' . esc_attr($gendertitle) . '</strong> : ' . esc_attr($gender) . '</li>';}		if($name == ''){$name = '';}else{$name = '<li><i class="fa fa-li fa-user"></i><strong>' . esc_attr($nametitle) . '</strong> : ' . esc_attr($name) . '</li>';}	if($birthdate == ''){$birthdate = '';}else{$birthdate = '<li><i class="fa fa-li fa-calendar-o"></i><strong>' . esc_attr($birthdatetitle) . '</strong> : ' . esc_attr($birthdate) . '</li>';}	if($phone == ''){$phone = '';}else{$phone = '<li><i class="fa fa-li fa-phone"></i><strong>' . esc_attr($phonetitle) . '</strong> : ' . esc_attr($phone) . '</li>';}	if($email == ''){$email = '';}else{$email = '<li><i class="fa fa-li fa-envelope"></i><strong>' . esc_attr($emailtitle) . '</strong> : ' . esc_attr($email) . '</li>';}	if($website == ''){$website = '';}else{$website = '<li><i class="fa fa-li fa-globe"></i><strong>' . esc_attr($websitetitle) . '</strong> : <a href="' . esc_url($website) . '" target="_blank" style="color:' . $color . ';">' . esc_url($website) . '</a></li>';}	if($facebook == ''){$facebook = '';}else{$facebook = '<li><i class="fa fa-li fa-facebook"></i><strong>' . esc_attr($facebooktitle) . '</strong> : <a href="' . esc_url($facebook) . '" target="_blank" style="color:' . $color . ';">' . esc_url($facebook) . '</a></li>';}	if($twitter == ''){$twitter = '';}else{$twitter = '<li><i class="fa fa-li fa-twitter"></i><strong>' . esc_attr($twittertitle) . '</strong> : <a href="' . esc_url($twitter) . '" target="_blank" style="color:' . $color . ';">' . esc_url($twitter) . '</a></li>';}	if($address == ''){$address = '';}else{$address = '<li><i class="fa fa-li fa-home"></i><strong>' . esc_attr($addresstitle) . '</strong> : ' . esc_attr($address) . '</li>';}	if($linkedin == ''){$linkedin = '';}else{$linkedin = '<li><i class="fa fa-li fa-linkedin"></i><strong>' . esc_attr($linkedintitle) . '</strong> : <a href="' . esc_url($linkedin) . '" target="_blank" style="color:' . $color . ';">' . esc_url($linkedin) . '</a></li>';}			$return_string = '<div style="color:' . $color . ';">						<ul class="fa-ul selfie-personal-info">							' . $name . '							' . $gender . '															' . $birthdate . '							' . $born . '									' . $phone . '							' . $nationality . '														' . $address . '							' . $email . '							' . $website . '							' . $facebook . '							' . $twitter . '							' . $linkedin . '						</ul></div>';		return $return_string;	}/*------------------------------------------------------Selfie About Me Personal Image - Shortcode-------------------------------------------------------*/function selfie_about_me_image($atts, $content = null) {	extract(shortcode_atts(array('namecolor' => '', 'color2' => '', 'contentcolor' => '', 'personalimg' => '', 'personalname' => '', 'designation' => '','description' => ''), $atts));	$getimageurlarray = wp_get_attachment_image_src( $personalimg , 'full');	if( $getimageurlarray ) {$getimageurl = $getimageurlarray[0];} else {$getimageurl = '';}	$returnvalue = '	  <div class="text-center item_bottom">		<div class="about-me-container">			<img src="' . esc_url($getimageurl) . '" class="img-center img-responsive" alt="photo"/>			<h2 class="selfie-about-me-name" style="color:' . $namecolor . ';" >' . esc_attr($personalname) . '</h2>		</div>	   <div class="name-title"  style="background:' . $contentcolor . '; color:' . $color2 . ';">			<h5 style="color:' . $color2 . ';">' . esc_attr($designation) . '</h5>			<span>'. esc_attr($description) .'</span>	   </div>	  </div>		  ';	return $returnvalue;}/*------------------------------------------------------Selfie Blog - Shortcode-------------------------------------------------------*/function selfie_blog( $atts, $content = null ) {	extract(shortcode_atts(array('noofposts' => '' , 'postcategory' => ''), $atts));		global $prof_default;	$return_string = '';		if(strtoupper($postcategory) == ''){		$loop = new WP_Query(array('post_type' => 'post', 'posts_per_page' => $noofposts));	} else {		$loop = new WP_Query(array('post_type' => 'post', 'posts_per_page' => $noofposts,			'tax_query' => array(array(				'taxonomy' => 'category',				'field'    => 'slug',				'terms'    => $postcategory))				));	}		$counter = 1;		if ( $loop ) :   	while ( $loop->have_posts() ) : $loop->the_post();	if(of_get_option('select_present_education_link',$prof_default) == 'On'){$itemLink = esc_url(get_permalink());}else{$itemLink = '#';}		$image_string ='<a href="'. esc_url(get_permalink()) .'">' . get_the_post_thumbnail( get_the_ID() , 'full' ) . '</a>';		$categories = get_the_category(get_the_ID());	$output = '';	foreach ( $categories as $category ) {		if($category->name <> 'uncategorized' && $category->name <> 'Uncategorized' && $counter == 1){						$output .= '<a href="' . esc_url(get_category_link( $category->term_id )) . '" >' . esc_attr($category->name) . '</a>' . ', ';		}		$counter = $counter + 1;	}		$displayedCat = trim($output, ', ');		$return_string .='			<div class="wpb_column vc_column_container vc_col-sm-4">				<div class="mkdf-blog-standard-item-holder-outer">										<div class="mkdf-blog-standard-image-holder">						' . $image_string . '					</div>					<div class="mkdf-standard-content-holder">						<div class="mkdf-blog-standard-category">							' . $displayedCat . '						</div>						<a href="' . get_permalink() . '">							<div class="mkdf-blog-whole-link">								<div class="mkdf-blog-whole-section">									<div class="mkdf-blog-standard-date-section">										<span class="mkdf-blog-date">' . get_the_time('M') . ' ' . get_the_time('j') . ', ' . get_the_time('Y') .'</span>									</div>									<h3 class="mkdf-standard-item-title">										'. get_the_title() .'									</h3>								</div>							</div>						</a>					</div>				</div>			</div>';		$counter = 1;		endwhile;	endif;		wp_reset_query();		return $return_string;	}/*------------------------------------------------------Selfie Resume Timeline - Shortcode-------------------------------------------------------*/function selfie_resume_timeline( $atts, $content = null ) {	extract(shortcode_atts(array('noofpresent' => '' , 'noofeducation' => '' , 'presenttext' => '' , 'educationtext' => ''), $atts));		global $prof_default;			$return_string = '<section class="time-line">';		$return_string .='<div class="job-ribbon">					<span><i class="fa fa-suitcase"></i> ' . esc_attr($presenttext) . '</span>				</div>';		$return_string .='<div class="timeline timeline-selfie">';			$loop = new WP_Query(array('post_type' => 'present', 'posts_per_page' => $noofpresent));				$counter = 1;	$galleryids = '';	$getText = '';			$count = 0;		if ( $loop ) :   	while ( $loop->have_posts() ) : $loop->the_post();		if(of_get_option('select_present_education_link',$prof_default) == 'On'){		$itemLink = '<a href="'. esc_url(get_permalink()) .'" title="'. get_the_title() .'" > '. get_the_title() .' </a>';	}else{		$itemLink = get_the_title();	}		if($counter % 2 == 0){		$positionClass = 'selfie-resume-item-right';	}else{		$positionClass = 'selfie-resume-item-left';			}				$allowed_html = array(		'strong' => array()	);	if (has_post_thumbnail()) {		$image_string = get_the_post_thumbnail( get_the_ID() , 'full' );	} else {		$image_string = '';	}		if($counter == 1){$firstItem = 'selfie-first-item';}else{$firstItem = '';}		$return_string .='<div class="timeline-row item_fade_in '. $positionClass .' ' . $firstItem . '">						<div class="timeline-time">												<small>' . esc_attr(get_post_meta(get_the_ID(), 'Present Period', true)) . '</small>'						. esc_attr(get_post_meta(get_the_ID(), 'Present Position', true)) . '						</div>';	$return_string .='<div class="timeline-icon">						<div class="bg-primary"> <i class="fa fa-' . esc_attr(get_post_meta(get_the_ID(), 'Icon', true)) . '"></i> </div>					</div>					<div class="panel timeline-content">						<div class="panel-body panel-body-resume">							<div class="panel-body-left">								' . $image_string . '							</div>							<div class="panel-body-right">								<h4 class="strong strong-timeline">'. $itemLink .'</h4>								<p>' . do_shortcode(wp_kses(wp_trim_words( get_the_content(), 100 ), $allowed_html)) . '</p>							</div>						</div>					</div>';   								$return_string .= '</div>';	$counter = $counter + 1;			endwhile;	endif;			if($noofeducation <> 0){		$counter = 1;				$loop = new WP_Query(array('post_type' => 'education', 'posts_per_page' => $noofeducation));		 		$return_string .='<div class="timeline-row job-ribbon-education item_fade_in">';		$return_string .='<div class="">							<div class="job-ribbon job-ribbon-education">								<span><i class="fa fa-graduation-cap"></i> ' . esc_attr($educationtext) . '</span>							</div>												</div>						<div class="panel timeline-content timeline-content-experience">							<div class="panel-body">							<h4 class="strong">' . esc_attr($educationtext) . '</h4>							</div>						</div>';   									$return_string .= '</div>';						if ( $loop ) :   		while ( $loop->have_posts() ) : $loop->the_post();									if(of_get_option('select_present_education_link',$prof_default) == 'On'){				$itemLink = '<a href="'. esc_url(get_permalink()) .'" title="'. get_the_title() .'" > '. get_the_title() .' </a>';			}else{				$itemLink = get_the_title();			}						if($counter % 2 == 0){				$positionClass = 'selfie-resume-item-right';			}else{				$positionClass = 'selfie-resume-item-left';					}								$allowed_html = array(				'strong' => array()			);			if (has_post_thumbnail()) {				$image_string = get_the_post_thumbnail( get_the_ID() , 'full' );			} else {				$image_string = '';			}												$return_string .='<div class="timeline-row item_fade_in '. $positionClass .'">								<div class="timeline-time"> <small>' . esc_attr(get_post_meta(get_the_ID(), 'Present Period', true)) . '</small>' . esc_attr(get_post_meta(get_the_ID(), 'Education University', true)) . '</div>';			$return_string .='<div class="timeline-icon">								<div class="bg-primary"> <i class="fa fa-' . esc_attr(get_post_meta(get_the_ID(), 'Icon', true)) . '"></i> </div>							</div>							<div class="panel timeline-content">								<div class="panel-body panel-body-resume">									<div class="panel-body-left">										' . $image_string . '									</div>									<div class="panel-body-right">										<h4 class="strong strong-timeline">'. get_the_title() .'</h4>										<p>' . do_shortcode(wp_kses_post(wp_trim_words( get_the_content(), 100 ))) . '</p>																	</div>								</div>							</div>';   										$return_string .= '</div>';													$counter = $counter + 1;					endwhile;		endif;					}			$return_string .= '</div></section>';		wp_reset_postdata();		return $return_string;	}/*------------------------------------------------------Selfie Homepage Row Start - Shortcode-------------------------------------------------------*/function selfie_homepage_container($atts, $content = null) {		extract(shortcode_atts(array('bordertop' => 'no' , 'borderbottom' => 'no' , 'font' => '#666666'), $atts));		if($bordertop == 'yes'){$top = 'homepage-container-design-top';}else{$top = '';}		if($borderbottom == 'yes'){$bottom = 'homepage-container-design-bottom';}else{$bottom = '';}		$returnedvalue = '<div class="homepage-container-design ' . $top . ' ' . $bottom .'" style="color:'. $font .';">			<div class="homepage-container-design-inner">';		return $returnedvalue;}/*------------------------------------------------------Selfie Homepage Row Wide Start - Shortcode-------------------------------------------------------*/function selfie_homepage_container_wide($atts, $content = null) {		extract(shortcode_atts(array('bordertop' => 'no' , 'borderbottom' => 'no' , 'font' => '#666666'), $atts));		if($bordertop == 'yes'){$top = 'homepage-container-design-top';}else{$top = '';}		if($borderbottom == 'yes'){$bottom = 'homepage-container-design-bottom';}else{$bottom = '';}	return '<div class="homepage-container-design homepage-container-design-wide '. $top . ' ' . $bottom .'" style="color:'. $font .';">			<div class="homepage-container-design-inner">';}/*------------------------------------------------------Selfie Service with Icon and rotation - Shortcode-------------------------------------------------------*/function selfie_services_with_icon_rotate($atts, $content = null){	extract(shortcode_atts(array('animationtype' => '' , 'icon' => '', 'icontwo' => '' , 'title' => '' , 'text' => '', 'texttwo' => '' , 'color' => ''), $atts));		return '<div class="selfie-services-image selfie-services-image-scale selfie-services-icon ' . $animationtype . ' text-center">				<div class="selfie-services-icon-first">					<span class="fa fa-' . $icon . ' fa-2x" style="color: ' . $color . ';"></span>					<h3 style="color: ' . $color . ';" class="selfie-services-image-title">' . esc_attr($title) . '</h3>					<p style="color: ' . $color . ';">' . esc_attr($text) . '</p>				</div>				<div class="selfie-services-icon-second">					<div class="selfie-services-icon-second-icon"><span class="fa fa-' . $icontwo . ' fa-2x" style="color: ' . $color . ';"></span></div>					<div class="selfie-services-icon-second-text"><p style="color: ' . $color . ';">' . esc_attr($texttwo) . '</p></div>				</div>			</div>';}/*------------------------------------------------------Selfie Process Timeline - Shortcode-------------------------------------------------------*/function selfie_process_timeline( $atts, $content = null ) {	extract(shortcode_atts(array('noofprocesses' => '', 'iconcolor' => '', 'titlecolor' => '', 'textcolor' => '' , 'postcategory' => ''), $atts));	global $prof_default;	$return_string = '<section class="time-line time-line-process"><div class="timeline timeline-selfie process-timeline-selfie">';			if(strtoupper($postcategory) == ''){		$loop = new WP_Query(array('post_type' => 'process', 'posts_per_page' => $noofprocesses));	} else {		$loop = new WP_Query(array('post_type' => 'process', 'posts_per_page' => $noofprocesses,		'tax_query' => array(array(			'taxonomy' => 'processcategories',			'field'    => 'slug',			'terms'    => $postcategory))						));	}						$counter = 1;	$galleryids = '';	$getText = '';			$count = 0;	$positionClass = "";			if ( $loop ) :   	while ( $loop->have_posts() ) : $loop->the_post();		if($counter % 2 == 0){		$positionClass = 'selfie-process-right';		$imageSeperator = get_stylesheet_directory_uri() . '/images/selfie-process-line2.png';	}else{		$positionClass = 'selfie-process-left';		$imageSeperator = get_stylesheet_directory_uri() . '/images/selfie-process-line1.png';	}				$return_string .='<div><div class="timeline-row item_fade_in ' . $positionClass . '">';	$return_string .='<div class="timeline-icon">						<div class="bg-primary">' . get_the_post_thumbnail( get_the_ID() , 'full' ) . '</div>					</div>					<div class="panel timeline-content">						<div class="panel-body">							<span class="selfie-process-icon"><i style="color:' . $iconcolor . ';" class="fa fa-' . esc_attr(get_post_meta(get_the_ID(), 'Icon', true)) . '"></i></span>							<h4 style="color:' . $titlecolor . ';" class="strong strong-timeline">'. get_the_title() .'</h4>							<p style="color:' . $textcolor . ';">' . do_shortcode(wp_kses_post(wp_trim_words( get_the_content(), 20 ))) . '</p>						</div>					</div>';   																	$return_string .= '</div>						<div class="selfie-process-separator">							<img src="' . $imageSeperator . '" alt="seperator" />						</div>						</div>';	$counter = $counter + 1;			endwhile;	endif;	$return_string .= '</div></section>';		wp_reset_postdata();		return $return_string;	}/*------------------------------------------------------Selfie Service with Icon - Shortcode-------------------------------------------------------*/function selfie_services_with_icon($atts, $content = null){	extract(shortcode_atts(array('animationtype' => '' , 'icon' => '' , 'title' => '' , 'text' => '' , 'color' => ''), $atts));		return '<div class="selfie-services-image selfie-services-icon ' . $animationtype . ' text-center">				<span class="fa fa-' . $icon . ' fa-2x" style="color: ' . $color . ';"></span>				<h3 style="color: ' . $color . ';" class="selfie-services-image-title">' . esc_attr($title) . '</h3>				<p style="color: ' . $color . ';">' . esc_attr($text) . '</p>			</div>';}/*------------------------------------------------------Selfie Service with Image - Shortcode-------------------------------------------------------*/function selfie_services_with_image($atts, $content = null){	extract(shortcode_atts(array('animationtype' => '' , 'image' => '' , 'title' => '' , 'text' => '' , 'color' => ''), $atts));		$getimageurlarray = wp_get_attachment_image_src( $image , 'full');	if( $getimageurlarray ) {$getimageurl = $getimageurlarray[0];} else {$getimageurl = '';}	$alt = get_post_meta($image, '_wp_attachment_image_alt', true);		return '<div class="selfie-services-image ' . $animationtype . ' text-center">				<img src="' . $getimageurl . '" alt="' . $alt . '" />				<h3 style="color: ' . $color . ';" class="selfie-services-image-title">' . esc_attr($title) . '</h3>				<p style="color: ' . $color . ';">' . esc_attr($text) . '</p>			</div>';}/*------------------------------------------------------Selfie Section Title - Shortcode-------------------------------------------------------*/function selfie_section_title($atts, $content = null){	extract(shortcode_atts(array('icon' => '' , 'animationtype' => '' , 'normaltext' => '' , 'iconcolor' => '' , 'textcolor' => ''), $atts));		return '<div class="section-title ' . $animationtype . ' text-center">				<span class="fa fa-' . $icon . ' fa-2x" style="color: ' . $iconcolor . ';"></span>				<h1 style="color: ' . $textcolor . ';">' . esc_attr($normaltext) . '</h1>			</div>';}/*------------------------------------------------------Selfie Services Icons - Shortcode-------------------------------------------------------*/function selfie_services_icons($atts, $content = null){	extract(shortcode_atts(array('icon' => 'icon', 'titlecolor' => '' , 'desccolor' => '' , 'color' => '', 'animationtype' => '', 'title' => 'Title Goes Here', 'text' => 'Content and Text goes here'), $atts));		return '<div class="selfie-service-box services-box ' . $animationtype . '">		<h4 style="color:' . $titlecolor . ';">			<div class="services-icon">				<i style="color:' . $color . ';" class="fa fa-' . $icon . ' fa-3x"></i>			</div>' . esc_attr($title) . '		</h4>				<div class="service-box-info">			<p style="color:'. $desccolor .';">				 ' . esc_attr($text) .'			</p>		</div>	</div>';}/*------------------------------------------------------Selfie Animated Numbers-------------------------------------------------------*/function selfie_animated_numbers($atts, $content = null) {	extract(shortcode_atts(array('icon' => 'icon', 'textcolor' => '#666666', 'number' => '1000', 'text' => 'Description goes here'), $atts));	return '<div class="counters-item">					<div class="counters-item-number">						<i class="fa fa-' . $icon . ' fa-2x" style="color:'. $textcolor .';"></i>						<strong style="color:'. $textcolor .'" data-to="'. esc_attr($number) .'">'. esc_attr($number) .'</strong>					</div>					<div class="counters-item-text">						<p style="color:'. $textcolor .';">							 ' . esc_attr($text) . '						</p>					</div>				</div>	';}/*------------------------------------------------------Selfie Chart-------------------------------------------------------*/function selfie_chart($atts, $content = null) {	extract(shortcode_atts(array('textcolor' => '' ,'title' => 'title', 'number' => '1000', 'text' => 'Description goes here'), $atts));	return '<div class="chart" data-percent="' . esc_attr($number) . '">				<span style="color:' . $textcolor . ';" class="percent">' . esc_attr($number) . '</span>				<h4 style="color:' . $textcolor . ';">' . esc_attr($title) . '</h4>				<p style="color:' . $textcolor . ';">					' . esc_attr($text) . '				</p>			</div>';}/*------------------------------------------------------Selfie Clients images - Shortcode-------------------------------------------------------*/function selfie_clients_images($atts, $content = null){	extract(shortcode_atts(array('background' => ''), $atts));	$getText = '';	$splitImagesArray = explode(",", $background);	$splitImagesArraySize = count($splitImagesArray);				$getText .=	'<div class="clients"><div class="row item_fade_in"><div class="carrousel-container">		<div id="left_scroll">			<a href=""></a>		</div>		<div id="carousel_inner">			<ul class="clearfix" id="carousel_ul">';							for ($x=0; $x < $splitImagesArraySize; $x++)	{		$getimageurlarray = wp_get_attachment_image_src( $splitImagesArray[$x] , 'full');				$alt = get_post_meta($splitImagesArray[$x], '_wp_attachment_image_alt', true);				$getText .= '<li><span><img src="' . esc_url($getimageurlarray[0]) . '" alt="' . esc_attr($alt) . '"></span></li>';	} 				$getText .= '</ul>		</div>		<div id="right_scroll">			<a href=""></a>		</div>		<input type="hidden" id="hidden_auto_slide_seconds" value=0/>	</div></div></div>';		return $getText;}/*------------------------------------------------------Selfie Button - Shortcode-------------------------------------------------------*/function selfie_button($atts, $content = null) {   extract(shortcode_atts(array('fontcolor' => '#000' , 'buttoncolor' => '#FFFFFF' , 'bordercolor' =>'#474d5d' , 'link' => '#' , 'buttontext' => 'Button'), $atts));   if($fontcolor == '#FFFFFF' || $fontcolor == '#ffffff' || $fontcolor == '#fff'  || $fontcolor == '#FFF'){$hoverClass = 'identity-hover-button';}else{$hoverClass = '';}   return '<a href='. esc_url($link) .' class="btn '. $hoverClass .'" style="color:'. $fontcolor .'; background-color: '. $buttoncolor .'; border: 2px solid '. $bordercolor .';">'. esc_attr($buttontext) .'</a>';}/*------------------------------------------------------Selfie Homepage Row End - ShortCode-------------------------------------------------------*/function selfie_homepage_container_end($atts, $content = null) {   return '</div></div>';}/*------------------------------------------------------Selfie Process - Shortcode-------------------------------------------------------*/function selfie_process( $atts, $content = null ) {	extract(shortcode_atts(array('noofprocesses' => '' , 'color' => ''), $atts));		$loop = new WP_Query(array('post_type' => 'process', 'posts_per_page' => $noofprocesses));	$return_string = '<ol class="process-flow list-unstyled">';		$counter = 1;		if ( $loop ) :   			while ( $loop->have_posts() ) : $loop->the_post();			if($counter == $noofprocesses){				$nooflines = '';			} else {				$nooflines = '<div class="line">							<div class="progress">							</div>						  </div>';			}			$return_string .= '<li class="active">									<div class="process-node active">										<i style="color:' . $color . ';" class="fa fa-' . get_post_meta(get_the_ID(), 'Icon', true) . '"></i>									</div>									<h4 style="color:' . $color . ';">' . get_the_title() . '</h4>									<p style="color:' . $color . ';">										 ' . strip_shortcodes(wp_trim_words( get_the_content(), 20 )) . '									</p>									' . $nooflines . '								</li>';					$counter = $counter + 1;		endwhile;			endif;	wp_reset_query();			$return_string .= '</ol>';	   return $return_string;	}/*------------------------------------------------------Selfie Portfolio - Shortcode-------------------------------------------------------*/function selfie_portfolio( $atts, $content = null ) {	extract(shortcode_atts(array('numberofposts' => '100' , 'displayoption' => '' , 'postcategory' => ''), $atts));		global $prof_default;	$prevString = esc_html__("Previous Project",'selfie');	$nextString = esc_html__("Next Project",'selfie');	$closeString = esc_html__("Close Project",'selfie');	wp_reset_query();		$return_string = '';	$cat_string = '';	$terms = get_terms("portfoliocategories");	$count = count($terms);  	$AllWord = esc_html__("ALL" , 'selfie');		if ( $count > 0 ){  	  		$cat_string .='<li>					<a class="active" href="#" data-cat="*">' . esc_attr($AllWord) . '</a>					</li>';		foreach ( $terms as $term ) {  			if($term->name != 'Uncategorized' && $term->name != 'uncategorized'){				$termname = strtolower($term->name);  				$termname = str_replace(' ', '-', $termname);  				$cat_string .= '<li>					<a href="#" data-cat="'.$termname.'">'.$term->name.'</a>					</li>';  			}		}  	}  	$filterDisplay = '';	if($displayoption <> 'no' && $postcategory == ''){		$filterDisplay = '<div id="portfolio-filter">							<div class="row text-center">								<div class="col-md-12">									<ul class="portfolio-filter-list">										' . wp_kses( $cat_string, array(													"a" => array(														"href" => array(),														"data-cat" => array(),														"class" => array()																						),													'li' => array(),												) )										. '									</ul>								</div>							</div>								</div>';			}		$return_string .= $filterDisplay . '						<div>						<div>							<div>								<div id="portfolio-items" class="portfolio-items item_fade_in">					';		if(strtoupper($postcategory) == ''){		$loop = new WP_Query(array('post_type' => 'portfolio', 'posts_per_page' => $numberofposts));	} else {		$loop = new WP_Query(array('post_type' => 'portfolio', 'posts_per_page' => $numberofposts,		'tax_query' => array(array(			'taxonomy' => 'portfoliocategories',			'field'    => 'slug',			'terms'    => $postcategory))		));	}				/*$loop = new WP_Query(array('post_type' => 'portfolio', 'posts_per_page' => $numberofposts));*/	$cat_count = 1;		if ( $loop ) :   	while ( $loop->have_posts() ) : $loop->the_post();		$cat_count = 1;		$terms = get_the_terms( get_the_ID() , 'portfoliocategories' );  		$separator = ' | ';		$output = '';		$outputClass = '';		if ( $terms && ! is_wp_error( $terms ) ) {   			foreach ( $terms as $term )   			{  				$termname = strtolower($term->name);				if($cat_count < 3){																$output .= $term->name . $separator;				}				$termname = strtolower($term->name);  				$outputClass .= str_replace(' ', '-', $termname) . ' ';				$cat_count = $cat_count + 1;			} 						$final_cat_string = trim($output, $separator);					} else {   		   $final_cat_string = '';		   $outputClass = '';		}							if ( get_post_format() == false) {												$porIcon = 'camera';		}elseif ( has_post_format('video')) {			$porIcon = 'film';		}elseif ( has_post_format('gallery')) {			$porIcon = 'image';		}elseif ( has_post_format( 'audio' )) { 										$porIcon = 'music';		}else { 			$porIcon = 'camera';					} 				$feat_image = wp_get_attachment_url( get_post_thumbnail_id(get_the_ID()) );		$return_string .= ' <article class="' . $outputClass . '">								'. get_the_post_thumbnail(get_the_ID() , array( 380, 380)) . '							<div class="overlay">								<div class="controls">									<a href="'. esc_url(get_permalink()) .'" class="icon-round-border">										<i class="fa fa-link"></i>									</a>									<a href="' . $feat_image .'" class="icon-round-border icon-view">										<i class="fa fa-search"></i>									</a>								</div>															<div class="item-info">									<h3>'. get_the_title() .'</h3>									<span>' . $final_cat_string . '</span>								</div>							</div>												</article>';				endwhile;	endif;		$return_string .='</div></div></div></div>';		wp_reset_query();		return $return_string;	}	/*------------------------------------------------------Selfie Testimonial - Shortcode-------------------------------------------------------*/function selfie_testimonial( $atts, $content = null ) {	extract(shortcode_atts(array('noofposts' => '3', 'animationtype' => '' , 'fontcolor' => '' , 'speed' => '' , 'length' => ''), $atts));	$loop = new WP_Query(array('post_type' => 'testimonial', 'posts_per_page' => $noofposts));		$return_string = '<div class="' . $animationtype . ' ">					  <div class="swiper-testimonial" data-speed="' . esc_attr($speed) . '">					  <div class="swiper-wrapper">';		if ( $loop ) :   	while ( $loop->have_posts() ) : $loop->the_post();	if(strtoupper($length) == 'NO'){		$testText = strip_shortcodes(wp_trim_words( get_the_content(), 77 ));	} else {		$testText = get_the_content();	}		$return_string .= '<div class="swiper-slide white">							<div class="selfie-testimonial-content">								<p class="quote" style="color: '. $fontcolor .';">									' . $testText . ' - <span>'. get_the_title()  .'</span>								</p>														</div>														<div class="selfie-testimonial-img">								' . get_the_post_thumbnail( get_the_ID() ,  'selfie-testimonial-image' ) . '							</div>					   </div>';	endwhile;	endif;				$return_string .= '</div>						<div class="pagination-testimonial">						</div>					   </div>					   </div>';							wp_reset_query();			return $return_string;	}/*------------------------------------------------------Selfie Page Section - Shortcode-------------------------------------------------------*/function selfie_page_section( $atts, $content = null ) {	extract(shortcode_atts(array('id' => ''), $atts));	return '<div id="' . $id . '"></div>';		}/*------------------------------------------------------Selfie Pricing Table - Shortcode-------------------------------------------------------*/function selfie_pricing_table( $atts, $content = null ) {	extract(shortcode_atts(array('description' => '' , 'price' => '' , 'currency' => '' , 'period' => '' , 'text' => '' , 'link' => '' , 'linkname' => '',	'descriptioncolor' => '', 'descbackcolor' => '', 'pricecolor' => '', 'pricebackcolor' => '', 'buttonbackcolor' => '',	), $atts));			$allowedHTML = array('li' => array(), 'ul' => array(), 'br' => array());		return'<div class="selfie-table">			<h3 style="color:'. $descriptioncolor .' !important; background:'. $descbackcolor .'" class="selfie-pricing-desc">' . esc_attr($description) . '</h3>			<span style="background:'. $pricebackcolor .'; color:'. $pricecolor .'" class="selfie-price"><span style="color:'. $pricecolor .'" class="selfie-pricing-currency">' . esc_attr($currency) . '</span>' . esc_attr($price) . '<span style="color:'. $pricecolor .'" class="selfie-pricing-period">' . esc_attr($period) . '</span></span>			<div class="selfie-pricing-content">' . wp_kses($text , $allowedHTML) . '</div>			<div class="selfie-pricing-button" style="background:'. $buttonbackcolor .';">				<a href="' . esc_url($link) . '" >' . esc_attr($linkname) . '</a>			</div></div>';}/*------------------------------------------------------Selfie Contact Details - Shortcode-------------------------------------------------------*/function selfie_contact_details( $atts, $content = null ) {	extract(shortcode_atts(array('add1' => '' , 'add2' => '' , 'phone1' => '' , 'phone2' => '' , 'color' => ''), $atts));				$return_string = '<div class="text-left selfie-contact-details" style="color:' . $color . ';">						<i class="fa fa-paper-plane-o fa-3x"></i>						<p>							 ' . esc_attr($add1) . ' <br>							 ' . esc_attr($add2) . '						</p>						<p>							 <a style="color:' . $color . ';" href="tel:'. $phone1 .'">' . esc_attr($phone1) . '</a> <br><a style="color:' . $color . ';" href="tel:'. $phone2 .'">' . esc_attr($phone2) . '</a>						</p>					</div>';		return $return_string;	}/*------------------------------------------------------Selfie Social Icons - Shortcode-------------------------------------------------------*/function selfie_social_icon( $atts, $content = null ) {	extract(shortcode_atts(array('color' => '' , 'link' => '' , 'socialicon' => ''), $atts));				$return_string = '<div class="social-icon">							<a style="color:' . $color . ';" target="_blank" href="' . esc_url($link) . '"><i class="fa fa-' . $socialicon . ' fa-3x"></i></a>						</div>';		return $return_string;	}/*------------------------------------------------------Selfie Social Icons Circle - Shortcode-------------------------------------------------------*/function selfie_social_icon_circle( $atts, $content = null ) {	extract(shortcode_atts(array('backcolor' => '' , 'color' => '' , 'link' => '' , 'socialicon' => ''), $atts));		$return_string = '<div style="background:' . $backcolor . ';" class="social-icon social-icon-circle">							<a style="color:' . $color . ' !important;" target="_blank" href="' . esc_url($link) . '"><i class="fa fa-' . $socialicon . ' fa-3x"></i></a>						</div>';		return $return_string;	}/*------------------------------------------------------Selfie Alert Box-------------------------------------------------------*/function selfie_alert_box($atts, $content = null) {	extract(shortcode_atts(array('type' => '' , 'text' => ''), $atts));	return '<div class="alert-box alert-' . $type . ' alert">				<button data-dismiss="alert" class="close" type="button">x</button>				<p>' . esc_attr($text) . '</p>			</div>';}/*------------------------------------------------------Selfie List Item-------------------------------------------------------*/function selfie_list_item($atts, $content = null) {	extract(shortcode_atts(array('type' => '' , 'text' => '' , 'color' => ''), $atts));	if($type == 'default'){$type = '';}else{$type = '<i class="fa-li fa fa-' . $type . '"></i>';}	return '<ul class="fa-ul">				<li style="color:' . $color . ';">					'. $type .'' . esc_attr($text) . '				</li>			</ul>';}/*------------------------------------------------------Selfie Dropcaps-------------------------------------------------------*/function selfie_dropcaps($atts, $content = null) {	extract(shortcode_atts(array('type' => '' , 'character' => '' , 'text' => ''), $atts));	return '<p><span class="' . $type . '">' . esc_attr($character) . '</span>' . esc_attr($text) . '</p>';}/*------------------------------------------------------Selfie H1-------------------------------------------------------*/function selfie_heading_one($atts, $content = null) {	extract(shortcode_atts(array('text' => 'H1 Heading'), $atts));	return '<h1>' . esc_attr($text) . '</h1>';}/*------------------------------------------------------Selfie H2-------------------------------------------------------*/function selfie_heading_two($atts, $content = null) {	extract(shortcode_atts(array('text' => 'H2 Heading'), $atts));	return '<h2>' . esc_attr($text) . '</h2>';}/*------------------------------------------------------Selfie H3-------------------------------------------------------*/function selfie_heading_three($atts, $content = null) {	extract(shortcode_atts(array('text' => 'H3 Heading'), $atts));	return '<h3>' . esc_attr($text) . '</h3>';}/*------------------------------------------------------Selfie H4-------------------------------------------------------*/function selfie_heading_four($atts, $content = null) {	extract(shortcode_atts(array('text' => 'H4 Heading'), $atts));	return '<h4>' . esc_attr($text) . '</h4>';}/*------------------------------------------------------Selfie H5-------------------------------------------------------*/function selfie_heading_five($atts, $content = null) {	extract(shortcode_atts(array('text' => 'H5 Heading'), $atts));	return '<h5>' . esc_attr($text) . '</h5>';}/*------------------------------------------------------Selfie H6-------------------------------------------------------*/function selfie_heading_six($atts, $content = null) {	extract(shortcode_atts(array('text' => 'H6 Heading'), $atts));	return '<h6>' . esc_attr($text) . '</h6>';}	?>